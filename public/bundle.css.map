{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../Image.svelte",
    "../Viewer.svelte"
  ],
  "sourcesContent": [
    "<script>\n  export let alt;\n  export let data;\n\n  $: sizes = Object.keys(data)\n    .map(size => size.split(\"x\").map(v => Number.parseInt(v, 10)))\n    .sort((first, second) => first[0] < second[0])\n    .map((size, n, sizes) => {\n      const [width, height] = size;\n      if (n == sizes.length - 1) {\n        return `${width}px`;\n      }\n      return `(min-width: ${width}px) and (min-height: ${height}px) ${width}px`;\n    })\n    .join(\", \");\n\n  $: srcset = Object.entries(data)\n    .map(([size, src]) => {\n      const [width] = size.split(\"x\");\n      return `${src} ${width}w`;\n    })\n    .join(\", \");\n</script>\n\n<style>\n  img {\n    max-height: 100%;\n  }\n</style>\n\n<img {alt} {sizes} {srcset} />\n",
    "<script context=\"module\">\n  if (history.scrollRestoration) {\n    history.scrollRestoration = \"manual\";\n  }\n</script>\n\n<script>\n  import { fade } from \"svelte/transition\";\n\n  import Image from \"./Image.svelte\";\n  export let dataURL;\n\n  let links = [];\n\n  let imageData = (async dataURL => {\n    const response = await fetch(dataURL);\n    const data = await response.json();\n\n    // Now we know which links to highjack.\n    links = Array.from(document.links).flatMap(t => {\n      const href = t.getAttribute(\"href\");\n      if (href in data) {\n        t.addEventListener(\"click\", event => {\n          event.preventDefault();\n          navigate(href);\n          t.blur();\n        });\n        return href;\n      }\n    });\n    return data;\n  })(dataURL);\n\n  let selected;\n\n  function navigate(url) {\n    if (selected) {\n      history.replaceState(history.state, \"\", url);\n    } else {\n      history.pushState({ back: true }, \"\", url);\n    }\n    hashchange();\n  }\n\n  function escape() {\n    if (selected) {\n      let hash = selected;\n      if (history.state && history.state.back) {\n        history.back();\n      } else {\n        navigate(window.location.pathname);\n      }\n      let t = document.querySelector(`a[href=\"${hash}\"]`);\n      if (t) {\n        t.focus();\n      }\n    }\n  }\n\n  function prev() {\n    const current = links.indexOf(selected);\n    if (current < 1) {\n      escape();\n    } else {\n      navigate(links[current - 1]);\n    }\n  }\n\n  function next() {\n    const current = links.indexOf(selected);\n    if (current >= links.length - 1) {\n      escape();\n    } else {\n      navigate(links[current + 1]);\n    }\n  }\n\n  function keydown(event) {\n    if (selected) {\n      switch (event.key) {\n        case \"Escape\":\n          escape();\n          break;\n        case \"ArrowLeft\":\n        case \"PageUp\":\n          prev();\n          break;\n        case \"ArrowRight\":\n        case \"PageDown\":\n          next();\n          break;\n      }\n    }\n  }\n\n  let background;\n\n  function click(event) {\n    if (event.target === background) {\n      escape();\n    }\n  }\n\n  function hashchange() {\n    selected = window.location.hash;\n\n    if (selected) {\n      document.body.classList.add(\"photo-viewer\");\n      let t = document.querySelector(`a[href=\"${selected}\"]`);\n      if (t) {\n        t.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"nearest\"\n        });\n      }\n    } else {\n      document.body.classList.remove(\"photo-viewer\");\n    }\n  }\n</script>\n\n<style>\n  div {\n    position: fixed;\n    left: 0;\n    top: 0;\n    background-color: rgba(255, 255, 255, 0.5);\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    flex-wrap: wrap;\n    align-content: center;\n    justify-content: center;\n  }\n\n  :global(body.photo-viewer) {\n    overflow: hidden;\n  }\n</style>\n\n<svelte:window\n  on:load={hashchange}\n  on:hashchange={hashchange}\n  on:keydown={keydown} />\n\n{#if selected}\n  {#await imageData then data}\n    <div bind:this={background} on:click={click} transition:fade>\n      <Image alt={selected} data={data[selected]} />\n    </div>\n  {/await}\n{/if}\n"
  ],
  "names": [],
  "mappings": "AAyBE,GAAG,cAAC,CAAC,AACH,UAAU,CAAE,IAAI,AAClB,CAAC;AC+FD,GAAG,eAAC,CAAC,AACH,QAAQ,CAAE,KAAK,CACf,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC1C,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,MAAM,CACrB,eAAe,CAAE,MAAM,AACzB,CAAC,AAEO,iBAAiB,AAAE,CAAC,AAC1B,QAAQ,CAAE,MAAM,AAClB,CAAC"
}